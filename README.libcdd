1999-10-4 (October 4, 1999)
-----------------------------------------
C-Library cddlib (version 0.85) README FILE
-----------------------------------------
1. The C-library  cddlib is a C implementation of the Double Description 
Method of Motzkin et al. for generating all vertices (i.e. extreme points)
and extreme rays of a general convex polyhedron in R^{d+1} given by a system 
of linear inequalities:

   P = { x=(1, x1, ..., xd)^T :  A  x  >= 0 }

where  A  is an m x (d+1) real matrix and 0 is the m-vector of all zeros.

The program can be used for the reverse operation (i.e. convex hull
computation).  This means that  one can move back and forth between 
an inequality representation  and a generator (i.e. vertex and ray) 
representation of a polyhedron with cdd.  Also, cdd can solve a linear
programming problem, i.e. a problem of maximizing and minimizing 
a linear function over P.

The version 0.85 is the second release of libcdd.  The
documentation is not ready.   Just look at the examples,
cdd_test*.c and dplex_test*.c.  The library functions
are listed in cdd.h.  Please note that this Version is
primitive.  There must be some surprises.  Yet,
its kernel has been tested for a long time and thus
I suppose it "should" behave quite reasonably for many cases.
Hopefully future versions will be robust and complete.

A newly added function in V.085 is ability to read "rational" data.
cddlib convers rationals to double float numbers, and computes
with floating-point arithmetic.  A few bugs have been fixed as
well.  The most important one allows linearity rows to be
linearly dependent.  (V.080 crashes when linearity rows are not
independent.)  Also, a new makefile generates ordinaly library
archive files, libcdd.a and libdplex.a.  You might want to put them
in a usual library directory (e.g. /usr/local/lib) and
the corresponding include files, cdd.h and dplex.h, in
the associated include directory (/usr/local/include).  Do not
forget to run "ranlib" for *.a files when they are copied
to a new directory.  (No effort has been made to create
windows/mac libraries.)

2. One new feature added for the library version is the ability
to handle essentially any data.  More precisely, it can
generate an H-representation of a V-polytope which is not
full-dimensional, and it can generate a V-representation
of an H-polytope which has no extreme points.  To see how
it works, try to run cdd_test1 with datafiles,
libtest[1,2,3].ine, libtest[a,b].ext, e.g.

% cdd_test1 < libtest1.ine

The input and output for the above look like

----------------------------------
Input is an H-representation

H-representation
begin
     3      4    real
  2 -1 -1  0
  0  1  0  0
  0  0  1  0
end

V-representation
begin
     4      4    real
  1  2  0  0
  1  0  0  0
  1  0  2  0
  0  0  0  1
end
linearity 1  4
----------------------------------

The input is an H-polytope with no vertices ("infinite prism"), 
and the output is an (non-unique) V-prepresentation.  The last line
"linearity 1  4" indicates that there is one-dimensional
space of linearity generated by the forth vector of the output
(i.e. the direction (0  0  1)).

Similarly, for the reverse conversion (say for libtesta.ext) one
gets:

----------------------------------
Input is a V-representation

V-representation
begin
     2      4    real
  1  1  0  1
  0  0  1  0
end

H-representation
begin
     4      4    real
  1  0  0  0
  0  0  1  0
 -1  1  0  0
 -1  0  0  1
end
linearity 2  3 4
----------------------------------

Here the input is a V-representation of a half line in R^3.
The output is an H-representation which includes two equalities
given as the third and forth output (linearity 2  3 4).
It is very important to note that the output is not
a unique V-representation but merely one representation.
cddlib outputs one redundant inequality "1  0 ... 0", whenever
the polyhedron is strongly unbounded (i.e. the unbounded face
at infinity is in fact a facet).  It corresponds to the infinite
facet.

3. cddlib comes with a MatheLink version of cddlib that can be
called from Mathematica (tested only for Mathematica 2.2 and 3.0).
Some Mathematica notebooks are included to explain how one can 
use this program "cddmathlink" from Mathematica
to manipulate polytopes.  Please check the files, 
cddml-notbook.ma, cddml-PolytopeSkeleton.ma, cddml-DietProblem.ma,
and cddml-Zonotope.ma, in the mma subdirectory.  I could 
compile cddmathlink.c for Machintosh and Windows.  I have put
binaries for different platforms in 
ftp://ftp.ifor.math.ethz.ch/pub/fukuda/cdd/cddlibml_binary/  .


4. The cdd package is in "tar"ed and "gzip"ed format with name
cdd-***.tar.gz, where *** is the version number.  The standard
anonymous ftp site for the package is

     ftp site : ftp.ifor.math.ethz.ch
     directory: pub/fukuda/cdd
     file name: cdd-***.tar.gz

In order to unpack the package in a standard unix environment, type 
   
     % gunzip cddlib-***.tar.gz
     % tar xvf cddlib-***.tar

where *** must be replaced by the appropriate version number, and
% is a unix prompt. 

For compilation of libcdd, go to the subdirectory "makedir".  Edit
Makefile and do:

   % make all      (to compile all objects and test programs)
or
   % make ml       (to create the cddmathlink program for mma)
or
   % make everything      (to do both above).

In above, gnu C compiler gcc can be replaced by the native C-compiler
cc of your system if cc supports the modern ANSI C.  Edit the environment
variable CC in the file "Makefile".  For compilation of MathLink programs,
you need a binary "mprep", MathLink library "libML.a" and include file
"mathlink.h" which come with Mathematica.   I have tested for Mathematica 2.2
and 3.0 on NEXTSTEP 3.3.   

The library cddlib is free software, but if libcdd turns out to be useful, 
please kindly send to me (at the address below) a note or a paper mentioning 
for what purpose and how cdd has been used. The most powerful support 
for free software development is user's appreciation.   

For more information, contact
   Komei Fukuda
   fukuda@ifor.math.ethz.ch
   Zurich  :IFOR, ETH Zentrum, CH-8092 Zurich, Switzerland  
   Lausanne:DMA, EPFL, Ch-1015 Lausanne, Switzerland
   homepage: http://www.ifor.math.ethz.ch/staff/fukuda/fukuda.html

// END of cddlib.readme

